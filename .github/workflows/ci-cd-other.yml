name: CI/CD - Pipeline (Other Branches)

# Triggers: executes the pipeline on push and pull requests on other branchs
on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches-ignore:
      - main

jobs:
  build:
    # Runtime environment configuration (Ubuntu latest, Python 3.12)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    # Step to retrieve the source code
    - uses: actions/checkout@v3
    # Step to configure Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # Step to install dependencies
    - name: Install Dependencies
      id: dependencies-installing
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step to create and set environment variables
    - name: Creates and sets environment variables
      id: dot_env
      run: |
        echo "DSN=${{ secrets.DSN }}" > .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
      if: ${{ steps.dependencies-installing.outcome }} == "success"
    
    # Step to run linter (flake8)
    - name: Run Linting
      id: linting
      run: |
        flake8 . --ignore=E501  --config .flake8
      if: ${{ steps.dot_env.outcome }} == "success"

    # Step to run the tests   
    - name: Run Tests
      id: tests
      run: |
        pytest --ignore=env
      if: ${{ steps.linting.outcome }} == "success"

    # Step to ensure test coverage is above 80%   
    - name: Ensures test coverage is above 80%
      id: coverage_test
      run: |
        pytest --cov-fail-under=80
      if: ${{ steps.tests.outcome }} == "success"